{"version":3,"sources":["SidebarChats.js","Sidebar.js","axios.js","Chat.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarChats","className","Avatar","Sidebar","style","fontSize","placeholder","type","instance","axios","create","baseURL","Chat","messageSent","useState","input","setInput","sendMessage","e","a","preventDefault","post","name","message","timestamp","receiver","console","log","map","data","value","onChange","target","onClick","App","setmessageSent","useEffect","get","then","response","channel","Pusher","cluster","subscribe","bind","unbind","unsubscribe","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.214081c5.chunk.js","sourcesContent":["import { Avatar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './SidebarChats.css'\r\n\r\nfunction SidebarChats() {\r\n          return (\r\n                    <div className='sidebarChats'>\r\n                             <Avatar/> \r\n                             <div className=\"sidebarChats__info\">\r\n                                       <p>david copperfield</p>\r\n                                       <p>Ena da panura naya</p>\r\n                             </div>\r\n                    </div>\r\n          )\r\n}\r\n\r\nexport default SidebarChats\r\n","import React from 'react'\r\nimport './Sidebar.css'\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SidebarChats from './SidebarChats.js'\r\nimport { Avatar } from '@material-ui/core';\r\n\r\n\r\nfunction Sidebar() {\r\n          return (\r\n                    <div className='sidebar'>\r\n                              <div className=\"sidebar__header\">\r\n                                        <div className=\"sidebar__headerLeft\">\r\n                                                  <Avatar className='profileIcon' style={{ fontSize: 38 }}/>\r\n                                        </div>\r\n                                        <div className=\"sidebar__headerRight\">\r\n                                                  <div className=\"sidebar__headerIcon\">\r\n                                                            <DonutLargeIcon style={{ fontSize: 20 }}/>\r\n                                                  </div>\r\n                                                  <div className=\"sidebar__headerIcon\">\r\n                                                            <MessageIcon style={{ fontSize: 20 }}/>\r\n                                                  </div>\r\n                                                  <div className=\"sidebar__headerIcon\">\r\n                                                            <MoreVertIcon style={{ fontSize: 20 }}/>\r\n                                                  </div>\r\n                                        </div>\r\n                              </div>\r\n                              <div className=\"sidebar__searchBar\">\r\n                                        <div className=\"sidebar__input\">\r\n                                        <SearchIcon className='search__icon' style={{ fontSize: 20 }}/>\r\n                                        <input placeholder='Search or start new chat' type=\"text\"/>\r\n                                        </div>\r\n                              </div>\r\n                              <div className=\"sidebar__chats\">\r\n                                        <SidebarChats/>\r\n                                        <SidebarChats/>\r\n                                        <SidebarChats/>\r\n                                        <SidebarChats/>\r\n                              \r\n                              </div>\r\n                    </div>\r\n          )\r\n}\r\n\r\nexport default Sidebar\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n          baseURL:'http://localhost:4000'\r\n})\r\n\r\nexport default instance","import { Avatar } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport './Chat.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport axios from './axios'\r\n\r\nfunction Chat({messageSent}) {\r\n\r\n        const [input,setInput] = useState(\"\")\r\n\r\n        const sendMessage = async (e) =>{\r\n               e.preventDefault()\r\n              \r\n              await axios.post('/message/new',{\r\n                name:\"killer\",\r\n                message: input,\r\n                timestamp:\"demo timestamp\",\r\n                receiver: false\r\n               })\r\n\r\n               setInput(\"\")\r\n        }\r\n\r\n        console.log(input)\r\n\r\n          return (\r\n                    <div className='chat'>\r\n                            <div className=\"chat__header\">\r\n                                   <div className=\"chat__headerLeft\">\r\n                                        <Avatar className='chat__headerAvatarIcon' style={{ fontSize: 38 }}/>\r\n                                        <div className=\"chat__headerInfo\">\r\n                                                <p>group name</p>\r\n                                                <p>last seen...</p>\r\n                                        </div>     \r\n                                   </div>   \r\n                                   <div className=\"chat__headerRight\">\r\n                                           <div className=\"chat__headerRightSearch\">\r\n                                                     <SearchIcon  className='chat__headerIcon' style={{ fontSize: 20 }}/>\r\n                                           </div>\r\n                                           <div className=\"chat__headerRightMore\">\r\n                                                  <MoreVertIcon  className='chat__headerIcon' style={{ fontSize: 20 }}/>\r\n                                           </div>\r\n                                   </div> \r\n\r\n                            </div>  \r\n                            <div className=\"chat__body\">\r\n                                   \r\n                                   {/* //maping  //className of reciever 'chat__reciever' */}\r\n                                       {messageSent.map((data)=>(\r\n\r\n                                         <p className={`chat__userInfo ${data.receiver && 'chat__reciever'}`}>\r\n                                                <span className='chat__name'>{data.name}</span>\r\n                                                    {data.message}\r\n                                                <span className='chat__time'>\r\n                                                        {/* {new Date().toUTCString()} */}\r\n                                                        {data.timestamp}\r\n                                                </span>\r\n                                         </p>\r\n    \r\n                                       ))}\r\n\r\n                            </div>\r\n                            <div className=\"chat__footer\">\r\n                                    <div className=\"chat__emoji\">\r\n                                             <EmojiEmotionsIcon className='chat__footerIcon' style={{ fontSize: 25 }}/>\r\n                                    </div>\r\n                                    <div className=\"chat__pin\">\r\n                                              <AttachFileIcon className='chat__footerIcon chat__footerAttachIcon' style={{ fontSize: 25 }}/>\r\n                                    </div>\r\n                                    <form className='chat__footerForm'>\r\n                                            <input value={input} onChange={e => setInput(e.target.value)} type=\"text\" className='chat__footerIcon' placeholder='Type a message'/>\r\n                                            <button onClick={sendMessage}>send</button>\r\n                                    </form>\r\n                                    <div className=\"chat__mic\">\r\n                                           <MicIcon className='chat__footerIcon' style={{ fontSize: 25 }}/> \r\n                                    </div>\r\n                            </div>\r\n                    </div>\r\n          )\r\n}\r\n\r\nexport default Chat\r\n","import './App.css';\nimport Sidebar from './Sidebar.js'\nimport Chat from './Chat.js'\nimport { useEffect, useState } from 'react';\nimport Pusher from 'pusher-js'\nimport axios from './axios.js'\n\nfunction App() {\n\n  const [messageSent,setmessageSent] = useState([])\n\n  useEffect(()=>{\n         axios.get('/message/sync')\n         .then(response=>{\n\n           setmessageSent(response.data)\n         })\n  },[])\n\n  console.log(messageSent)\n\n  useEffect(()=>{\n    const pusher = new Pusher('36eabe34aa32764b7d33', {\n      cluster: 'ap2'\n    });\n\n    const channel = pusher.subscribe('messages');\n                                    //new message from user\n    channel.bind('inserted', function(data) {\n      // alert(JSON.stringify(data));\n         //updating as soon as a user sent\n      setmessageSent([...messageSent,data])\n    });\n\n    return ()=>{\n      channel.unbind()\n      channel.unsubscribe()\n    }\n\n  },[messageSent])\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__backColor\"></div>\n         <div className=\"app__body\">\n           <Sidebar/>\n           <Chat\n           messageSent={messageSent}\n           />\n         </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}